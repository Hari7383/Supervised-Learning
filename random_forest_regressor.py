# -*- coding: utf-8 -*-
"""random-forest-regressor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RlAcWGEh_XD9SDHsfiqO4J2L6M2B82mL
"""

import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, confusion_matrix

data = pd.read_csv('Decision-Tree Dataset.csv')
data

for x in data.columns:
    print(x, data[x].unique())

data['doors'] = data['doors'].replace('5more', 5)

data

col_names = ['buying', 'maint', 'lug_boot', 'safety', 'class']
encoded_columns = data[col_names]
encoded_columns

le = LabelEncoder()
for col in encoded_columns.columns:
    encoded_columns[col] = le.fit_transform(encoded_columns[col])

encoded_columns

data.drop(columns=encoded_columns.columns, inplace=True)
data = pd.concat([data, encoded_columns], axis=1)
data

data['persons'].unique()

data

data['persons'] = data['persons'].replace('more', 3)

x = data.drop('class', axis=1)
y = data['class']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

data.shape

x_train.head()

rf = RandomForestRegressor(n_estimators = 100,random_state=42)
rf = rf.fit(x_train, y_train)

y_train

from sklearn.metrics import classification_report

y_test

y_pred = rf.predict(x_test)
#print(classification_report(y_pred,y_test))

y_pred=[round(x) for x in y_pred]

print(classification_report(y_pred,y_test))